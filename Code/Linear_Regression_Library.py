# -*- coding: utf-8 -*-
"""ML_linear_regression_library.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1wdAdDAZ15RmClppVlSS6RiNepdR5jMvu
"""

# Commented out IPython magic to ensure Python compatibility.
# Importing necessary libraries

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import mpl_toolkits
# %matplotlib inline

"""**Raeding the data**"""

data = pd.read_csv("Mumbai_House_Price.csv")

data.describe()

"""**Dropping ID and Price(Target Variable)**"""

data_X = data.drop(['id', 'Price'],axis=1)

"""**Target Variable - Price**"""

data_Y = data['Price']

"""**Spliting the data into train data(80%) and test data(20%)**"""

from sklearn.model_selection import train_test_split
X_train, X_test, Y_train, Y_test = train_test_split(data_X, data_Y, test_size = 0.20, random_state =2)

"""**Linear Regression**"""

from sklearn.linear_model import LinearRegression
reg = LinearRegression()

reg.fit(X_train, Y_train)

reg.score(X_train, Y_train)

reg.score(X_test, Y_test)

"""**Gardient Boosting Regression**"""

from sklearn import ensemble
gradient_boosting_regressor = ensemble.GradientBoostingRegressor(n_estimators = 400, max_depth = 5, min_samples_split = 2,
          learning_rate = 0.1, loss = 'ls')

gradient_boosting_regressor.fit(X_train, Y_train)

gradient_boosting_regressor.score(X_train, Y_train)

gradient_boosting_regressor.score(X_test, Y_test)